<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Robin&#39;s Restaurant</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://yzlnew.github.io/"/>
  <updated>2018-11-20T03:20:46.818Z</updated>
  <id>https://yzlnew.github.io/</id>
  
  <author>
    <name>r0b1n4saLe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python 垃圾回收及 gc 模块</title>
    <link href="https://yzlnew.github.io/2018/06/19/python-gc/"/>
    <id>https://yzlnew.github.io/2018/06/19/python-gc/</id>
    <published>2018-06-19T15:35:17.000Z</published>
    <updated>2018-11-20T03:20:46.818Z</updated>
    
    <content type="html"><![CDATA[<p>本文简单描述了 Python 3.6 的垃圾回收机制。</p><a id="more"></a><p>翻译整理自原文<a href="https://rushter.com/blog/python-garbage-collector/" target="_blank" rel="noopener">Garbage collection in Python: things you need to know</a></p><h3 id="python-垃圾回收机制"><a class="header-anchor" href="#python-垃圾回收机制">¶</a>Python 垃圾回收机制</h3><p>标准的 CPython 垃圾回收机制有两个组成部分：引用计数和 gc 模块。</p><ul><li>引用计数回收直接、高效，但是不能处理循环引用；Python 用 gc 模块来处理循环引用</li><li>引用计数不能被禁用，gc 可选</li></ul><h3 id="引用计数"><a class="header-anchor" href="#引用计数">¶</a>引用计数</h3><p>引用计数的思想很简单，当一个对象没有引用的时候就会被释放。</p><p>我们知道所有的 Python 变量都是指向对象的一个引用。记录下每一个对象的引用数量，随着引用的创建或删除增减。</p><p>比如，下列情况下引用数会增加：</p><ul><li>赋值运算</li><li>传参</li><li>列表中加入对象</li></ul><p>当引用计数为0的时候，CPython 就会自动调用对象的析构函数。当这个对象里有其他对象的引用，他们的引用计数也会减少。</p><h3 id="gc-模块"><a class="header-anchor" href="#gc-模块">¶</a>gc 模块</h3><p>gc 模块用来处理循环引用。</p><p><code>del</code> 删除了对于对象的引用（指针，箭头），但是它们互相的引用还存在，所以不会被引用计数机制回收。</p><p><img src="https://ws2.sinaimg.cn/large/006tNc79ly1fsgiegex7jj30ad05j0st.jpg" alt="gc"></p><p>虽然有了垃圾回收机制，还是可能导致内存泄漏。可以用 gc 和 objgraph 来定位内存泄漏。</p><h3 id="常用的-gc-函数"><a class="header-anchor" href="#常用的-gc-函数">¶</a>常用的 gc 函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gc.disable()        <span class="comment"># 禁用自动垃圾回收.</span></span><br><span class="line">gc.collect()        <span class="comment"># 执行一次完整的垃圾回收</span></span><br><span class="line">gc.set_threshold()  <span class="comment"># 设置垃圾回收的阈值</span></span><br><span class="line">gc.set_debug()      <span class="comment"># 设置垃圾回收的调试标记</span></span><br></pre></td></tr></table></figure><h3 id="延伸阅读"><a class="header-anchor" href="#延伸阅读">¶</a>延伸阅读</h3><ul><li><a href="http://www.wklken.me/posts/2015/09/29/python-source-gc.html" target="_blank" rel="noopener">http://www.wklken.me/posts/2015/09/29/python-source-gc.html</a></li><li><a href="https://www.jianshu.com/p/1e375fb40506" target="_blank" rel="noopener">https://www.jianshu.com/p/1e375fb40506</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文简单描述了 Python 3.6 的垃圾回收机制。&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="https://yzlnew.github.io/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>分类器评价指标简析 - Accuracy, Precision, Recall, F1, ROC&amp;AUC</title>
    <link href="https://yzlnew.github.io/2018/05/14/ml-evaluation/"/>
    <id>https://yzlnew.github.io/2018/05/14/ml-evaluation/</id>
    <published>2018-05-14T17:18:11.000Z</published>
    <updated>2018-11-20T03:20:46.818Z</updated>
    
    <content type="html"><![CDATA[<p>在机器学习的模型评估中，选择合适的评价指标很重要。对于回归问题，常常使用一些损失函数，这在各个线上比赛、sklearn 的文档里都能看到。而对于分类或者标注问题，几种常见的指标比较容易混淆，这里简单总结一下。</p><a id="more"></a><h3 id="二分类的预测情况"><a class="header-anchor" href="#二分类的预测情况">¶</a>二分类的预测情况</h3><table><thead><tr><th></th><th>预测为正类</th><th>预测为负类</th></tr></thead><tbody><tr><td>实际为正类</td><td>True Positive</td><td>False Negative</td></tr><tr><td>实际为负类</td><td>False Positive</td><td>True Negative</td></tr></tbody></table><p>记忆很简单，前面表示预测是正确（True）的还是错误（False）的，后面表示预测的是正类（Positive）还是负类（Negative），跟英文两组词的原意一致。</p><h3 id="准确率-精确率-召回率和-f1"><a class="header-anchor" href="#准确率-精确率-召回率和-f1">¶</a>准确率、精确率、召回率和 F1</h3><ul><li><p>准确率 Accuracy 即预测正确的样本数占总样本数之比，也就是 0-1 损失函数在测试集上的准确率</p></li><li><p>精确率 Precision 和召回 Recall，对应上表来说，分子都是 TP</p><ul><li>Precision 是检索出相关文档数与检索出的文档总数的比率，衡量的是检索系统的<strong>查准率</strong>。对于二分类公式如下，即<strong>第一列</strong>中 TP 的占比，预测为正的样本中预测正确的占比。</li></ul><p>$$P = \frac{TP}{TP+FP}$$</p><ul><li>Recall 是指检索出的相关文档数和文档库中所有的相关文档数的比率，衡量的是检索系统的<strong>查全率</strong>。对于二分类公式如下，即<strong>第一行</strong>中 TP 的占比，实际正类中预测正确的占比。</li></ul><p>$$R = \frac{TP}{TP+FN}$$</p><ul><li>F-Measure 是两者的加权调和平均，F1 即 alpha = 1</li></ul><p>$$F = \frac{(\alpha^2+1)P\cdot R}{\alpha^2(P+R)}$$</p><p>很显然一个好的分类器要最大化 P 和 R，但是两者有不可调和的矛盾时，F1 可以作为一个整体的指标。</p><p>然而这几个指标的局限也在于，并不关心分类器在负类上的表现（TN 没有出现过）。所以引出了 ROC 曲线和 AUC。</p><h3 id="roc-曲线和-auc"><a class="header-anchor" href="#roc-曲线和-auc">¶</a>ROC 曲线和 AUC</h3><h4 id="tpr-和-fpr"><a class="header-anchor" href="#tpr-和-fpr">¶</a>TPR 和 FPR</h4><ul><li>真阳性率 True Positive Rate，在二分类下和 Recall 含义一致，表示<strong>第一行</strong>中的 TP 占比，表示所有正类中预测正确的比例</li></ul><p>$$TPR = \frac{TP}{TP+FN}$$</p><ul><li>假阳性率 False Positive Rate，弥补了前面指标对于 TN 关注不周的局限，即<strong>第二行</strong>的 FP 占比，表示所有负类中预测错误的比例</li></ul><p>$$FPR = \frac{FP}{FP+TN}$$</p><h4 id="roc-曲线"><a class="header-anchor" href="#roc-曲线">¶</a>ROC 曲线</h4><p>由上面的两个指标，就能衡量分类器在正类和负类上的表现。而且 TPR 越大越好，FPR 越小越好。ROC（Receiver Operating Characteristic） 曲线就是用来表示两者在阈值变化的情况下的取值变化。</p><p><img src="http://o9gmysn8m.bkt.clouddn.com/20180514152630028191819.png" alt=""></p><p>理解 ROC 曲线其实关键在于曲线是通过遍历所有的阈值得到的。而曲线越靠近左上角，分类器的整体性能越好。但是毕竟是不同的曲线，需要人为判定，为了方便机器判断，引入 AUC。</p><h4 id="auc"><a class="header-anchor" href="#auc">¶</a>AUC</h4><p>AUC 即 Area Under Curve，即 ROC 曲线和 x 轴围成的面积，AUC 越大分类器效果越好。</p><ul><li>AUC = 1，是完美分类器，采用这个预测模型时，不管设定什么阈值都能得出完美预测。绝大多数预测的场合，不存在完美分类器。</li><li>0.5 &lt; AUC &lt; 1，优于随机猜测。这个分类器（模型）妥善设定阈值的话，能有预测价值。</li><li>AUC = 0.5，跟随机猜测一样（例：丢铜板），模型没有预测价值。</li><li>AUC &lt; 0.5，比随机猜测还差；但只要总是反预测而行，就优于随机猜测。</li></ul></li></ul><div class="note info"><p>AUC 的物理意义：假设分类器的输出是样本属于正类的 socre（置信度），则 AUC 的物理意义为，任取一对（正、负）样本，正样本的 score 大于负样本的 score 的概率。</p></div> <p>参考资料：</p><ol><li>《统计学习方法》，李航</li><li><a href="http://www.cnblogs.com/maybe2030/p/5375175.html" target="_blank" rel="noopener">http://www.cnblogs.com/maybe2030/p/5375175.html</a></li><li><a href="https://zh.wikipedia.org/zh/ROC%E6%9B%B2%E7%BA%BF" target="_blank" rel="noopener">https://zh.wikipedia.org/zh/ROC曲线</a></li><li><a href="https://blog.argcv.com/articles/1036.c" target="_blank" rel="noopener">https://blog.argcv.com/articles/1036.c</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在机器学习的模型评估中，选择合适的评价指标很重要。对于回归问题，常常使用一些损失函数，这在各个线上比赛、sklearn 的文档里都能看到。而对于分类或者标注问题，几种常见的指标比较容易混淆，这里简单总结一下。&lt;/p&gt;
    
    </summary>
    
      <category term="Machine Learning" scheme="https://yzlnew.github.io/categories/Machine-Learning/"/>
    
    
  </entry>
  
  <entry>
    <title>美年健康 AI 大赛初赛小结</title>
    <link href="https://yzlnew.github.io/2018/05/07/meinian/"/>
    <id>https://yzlnew.github.io/2018/05/07/meinian/</id>
    <published>2018-05-07T22:01:51.000Z</published>
    <updated>2018-11-20T03:20:46.818Z</updated>
    
    <content type="html"><![CDATA[<p>天池美年的初赛逐渐告一段落，作为一个之前几乎没有任何实际机器实践经验的选手，也勉强进了复赛（b 榜的分 0.0391 ）。在其中也学到了很多东西，有些部分留到后面有时间再总结，这里主要大致梳理一下初赛的心路历程。</p><p><img src="https://1e8f2fa189da333464c9-e7cfef2b81d170385252e69507fe4f83.ssl.cf1.rackcdn.com/assets/images/pills.jpg" alt="药丸"></p><a id="more"></a><h3 id="参赛之前的背景"><a class="header-anchor" href="#参赛之前的背景">¶</a>参赛之前的背景</h3><h4 id="为什么要参加这次比赛"><a class="header-anchor" href="#为什么要参加这次比赛">¶</a>为什么要参加这次比赛</h4><p>非常直接的原因是找实习的时候发现必须得有项目经历，然而专业根本和机器学习没关系。在 kaggle 上看了几个入门赛，但是不如实际比赛来得有驱动力，再加上刚好美年的比赛时间很合适。</p><h4 id="比赛之前的技能点"><a class="header-anchor" href="#比赛之前的技能点">¶</a>比赛之前的技能点</h4><ul><li>自认为不太好的编程能力，会点 python，写过 C++ 算法，甚至还捣鼓过几个 Android 应用，<s>学而不精的典范</s>。</li><li>学过 Coursera 的 ML 课，看过《统计学习方法》，<s>一问细节就懵逼</s>。</li><li>良好的英文检索能力（我觉得这点还是挺重要的，知道点术语和自己想要实现的效果，剩下的谷歌能教会我就完全 OJBK）。</li><li>只听说过 XGBoost，完全没听说过 LightGBM，不过还是知道这样的比赛大多数都用的 GBDT 类的模型。Pandas？没听说过，numpy 都不 6。sklearn 还是用过一丢丢的（后来发现把它的文档整个通读一遍就知道基本的套路了，简直 excited）</li></ul><p>然后就开始愉快地写代码了！不试试怎么知道自己不行呢！</p><h3 id="比赛历程和一些坑"><a class="header-anchor" href="#比赛历程和一些坑">¶</a>比赛历程和一些坑</h3><h4 id="开始上手"><a class="header-anchor" href="#开始上手">¶</a>开始上手</h4><p>对于一个像我一样的初学者来说，面对一个题目一定是一脸茫然不知所措的。面对这种情况，两种方法是不推荐的：</p><ol><li>来吧，把机器学习 MOOC 从头来一遍。</li><li>以小白的虚心姿态问群里的大佬。</li></ol><p>第一种是因为做比赛其实一开始并不需要很全面的知识，像这个比赛，随便找个 kaggle 上类似比赛第一的解决方案看就行了。第二种，虽然比赛有很好的交流的机会，但是自己没有产出的话还是不要麻烦别人比较好，毕竟不是一个层次内的交流……</p><p>具体到这个比赛，我先看了几个 kaggle Titanic 的 <a href="https://www.kaggle.com/c/titanic#tutorials" target="_blank" rel="noopener">kernels</a>。有耐心的可以读一读<a href="https://www.kaggle.com/startupsci/titanic-data-science-solutions" target="_blank" rel="noopener">这个</a>，一整个 workflow 给你整得明明白白的。</p><p>另外调研了一下 LightGBM，感觉大家用得挺多的，那么我用它也肯定不这么会错咯。恰好 LightGBM 给了几个不错的 <a href="https://github.com/Microsoft/LightGBM/tree/master/examples" target="_blank" rel="noopener">Examples</a>，上手写代码的难度也大大降低了。</p><h4 id="先写一个简单的模型"><a class="header-anchor" href="#先写一个简单的模型">¶</a>先写一个简单的模型</h4><p>第二步其实直接可以写了，根本没想什么特征提取啊、模型选择、参数优化（因为我都不会），所以就先拿 sklearn 写了一个随机森林的方法。这里要再赞美一下 sklearn 的文档和 API 写得真的好（主要还是因为它简单）。</p><p>用了 100 多个缺失值少于 50000 的数值特征（文字特征不会处理，到现在还是人工分类，没用 NLP，以及这里是个大坑），大概最后结果在 0.037 左右。虽然成绩完全不行，但是还是给了我很大的信心，起码我是可以做出结果来的。</p><h4 id="漫漫上分路"><a class="header-anchor" href="#漫漫上分路">¶</a>漫漫上分路</h4><p>由于数据集的数据类型很复杂，数值列也基本不知道含义，取值范围也很多样，所以一开始就决定用树模型来做。特征决定了得分的上限，所以大部分时间基本都花在了处理数据、得到新的特征上去。后来证明这样是可行的。</p><ol><li>0.0320+ 阶段：只用 100 多个数值特征，LightGBM 用文档推荐的参数，大概得分在这里。</li><li>0.0315 左右阶段：用 log1p 调整了训练集输出的分布。这个是第一个卡住的地方。算法也是比较不稳定（特征太少），产生测试集和验证集的 random_state 不同，结果变化挺大，但是线上的成绩是不会提高的。</li><li>0.0310 阶段：手头还有好多的文字特征没用，取了几个数据量大的列，正则匹配分类，加了 5、6 个分类特征。虽然还是不稳定，但是线上成绩还是明显提高了（这又是卡住的地方）。</li><li>0.0300+ 阶段：看了技术圈大佬的分享，发现自己的数值特征用少了，就放宽了缺失值的范围，可以说是大步飞跃，线上线下的成绩稳定、也很同步。之前估计进复赛起码得 0.0300 吧，所以信心还是增强了不少。</li><li>0.0290+ 阶段：这时候离换数据只剩几天了，所以基本上就和队友在加文字特征，还是正则匹配分类。期间咨询了学医的同学的意见，选了一些重要的文字特征先处理了，效果还是很明显的。</li></ol><p>其中还是遇到一些其他的坎坷，比如：</p><ol><li>队友用 LDA 处理了长的问题特征，线下成绩突飞猛进，线上成绩反而差了。最后得出的结论还是特征加的有问题，对于 NLP 的理解和参数选择都还有要学习的地方。</li><li>研究了好久数据集要不要 shuffle 的问题，其实是毫无影响的。</li></ol><h3 id="一些感受和复赛的准备"><a class="header-anchor" href="#一些感受和复赛的准备">¶</a>一些感受和复赛的准备</h3><p>总体来说地话，学了很多东西，还需要学的东西更多。在过程中能够体会几点：</p><ol><li>多参考别人的经验。自己犯的一些错误或者存在的误区，其实很多人都经历过。学习别人的经验成长是最快的。</li><li>越往上，提升就越困难了，保持学习的心态，继续努力。</li></ol><p>对于复赛，自己的理解，主要要发力还是处理文字特征。不过我始终认为 NLP 在这个问题上称作一个工具更合适，能帮助非专业的我们处理复杂的病情描述，实际效果怎么样，还是咨询一下专业人士比较好。另外一部分需要准备的就是模型调参和模型融合了，这个倒比前面的特征处理要稍微简单、有方向一点。</p><p>总之，继续加油吧！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;天池美年的初赛逐渐告一段落，作为一个之前几乎没有任何实际机器实践经验的选手，也勉强进了复赛（b 榜的分 0.0391 ）。在其中也学到了很多东西，有些部分留到后面有时间再总结，这里主要大致梳理一下初赛的心路历程。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://1e8f2fa189da333464c9-e7cfef2b81d170385252e69507fe4f83.ssl.cf1.rackcdn.com/assets/images/pills.jpg&quot; alt=&quot;药丸&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Machine Learning" scheme="https://yzlnew.github.io/categories/Machine-Learning/"/>
    
    
  </entry>
  
  <entry>
    <title>在 VPS 部署 TeamSpeak 语音服务器一键脚本</title>
    <link href="https://yzlnew.github.io/2017/12/07/teamspeak/"/>
    <id>https://yzlnew.github.io/2017/12/07/teamspeak/</id>
    <published>2017-12-07T19:55:55.000Z</published>
    <updated>2018-11-20T03:20:46.818Z</updated>
    
    <content type="html"><![CDATA[<p>在VPS上搭建TeamSpeak语音服务器的一键脚本。仓库点<a href="https://github.com/yzlnew/TeamSpeak3Setup" target="_blank" rel="noopener">这里</a>。</p><p><img src="https://www.teamspeak.com/assets/images/logos/teamspeak.png" alt=""></p><a id="more"></a><h3 id="运行要求"><a class="header-anchor" href="#运行要求">¶</a>运行要求</h3><ul><li>Ubuntu14+ 64bit</li><li>sudo</li></ul><h3 id="使用方法"><a class="header-anchor" href="#使用方法">¶</a>使用方法</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/yzlnew/TeamSpeak3Setup/master/ts3setup.sh</span><br><span class="line">chmod +x ./ts3setup.sh</span><br><span class="line">./ts3setup.sh</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在VPS上搭建TeamSpeak语音服务器的一键脚本。仓库点&lt;a href=&quot;https://github.com/yzlnew/TeamSpeak3Setup&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.teamspeak.com/assets/images/logos/teamspeak.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>用 pandoc 让 Markdown 从 LaTeX 输出 pdf 文档</title>
    <link href="https://yzlnew.github.io/2017/10/12/pandoc-chinese/"/>
    <id>https://yzlnew.github.io/2017/10/12/pandoc-chinese/</id>
    <published>2017-10-12T17:42:44.000Z</published>
    <updated>2018-11-20T03:20:46.818Z</updated>
    
    <content type="html"><![CDATA[<p>听着名字就很绕，主要需求来源是用 Markdown 写一些简单的作业、提交的文档比较快，可是一些编辑器输出 pdf 比较难看（主要是字体无法自定义）或者是收费的，但是 pandoc 可以通过调用 XeLaTeX 解决这个问题。</p><a id="more"></a><h3 id="所需环境"><a class="header-anchor" href="#所需环境">¶</a>所需环境</h3><p>pandoc 和 LaTeX 是必须的，本文是在 macOS 下，其他系统同理。</p><p>以及一些必要的字体。</p><h3 id="命令行"><a class="header-anchor" href="#命令行">¶</a>命令行</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pandoc test.md -o test.pdf --latex-engine=xelatex -V CJKmainfont:SourceHanSerifCN-Regular -V CJKoptions:BoldFont=SourceHanSansCN-Medium,ItalicFont=STKaiti</span><br></pre></td></tr></table></figure><ul><li><code>--latex-engine=xelatex</code>：选定<code>xelatex</code>作为引擎。</li><li><code>-V CJKmainfont:SourceHanSerifCN-Regular</code>：设置正文字体，在字体册里可以查看字体名，这里是思源宋体。</li><li><code>-V CJKoptions:BoldFont=SourceHanSansCN-Medium,ItalicFont=STKaiti</code>：设置粗体和斜体，一般建议中文粗体用黑体，斜体用楷体。</li></ul><h3 id="其他要说的"><a class="header-anchor" href="#其他要说的">¶</a>其他要说的</h3><ul><li>pandoc 实际上是用了一个默认的 LaTeX 模版，这个模版可以通过<code>pandoc -D latex</code>看到。</li><li><code>-V</code>或者<code>-M</code>参数都可以改变这个模版的参数值，具体可以通过 <a href="https://pandoc.org/MANUAL.html" target="_blank" rel="noopener">pandoc</a> 文档查到。</li><li>可以向<a href="https://tex.stackexchange.com/questions/341809/pandoc-does-not-recognize-chinese-characters%7D" target="_blank" rel="noopener">这个答案</a>一样写成模版，如果不常改变字体设置的话。</li><li><a href="http://www.bagualu.net/wordpress/archives/5396" target="_blank" rel="noopener">这个链接</a>很有用。</li><li>成果还是不怎么好看，所以我开始质问自己为什么不直接用LaTeX，🙄️。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;听着名字就很绕，主要需求来源是用 Markdown 写一些简单的作业、提交的文档比较快，可是一些编辑器输出 pdf 比较难看（主要是字体无法自定义）或者是收费的，但是 pandoc 可以通过调用 XeLaTeX 解决这个问题。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>用 duti 管理 macOS 下的默认打开程序</title>
    <link href="https://yzlnew.github.io/2017/09/25/duti/"/>
    <id>https://yzlnew.github.io/2017/09/25/duti/</id>
    <published>2017-09-25T18:52:54.000Z</published>
    <updated>2018-11-20T03:20:46.818Z</updated>
    
    <content type="html"><![CDATA[<p><code>macOS</code>下管理文件的默认打开程序不是很方便，不过有了<code>duti</code>就可以通过配置文件来更改默认打开程序了。</p><a id="more"></a><h3 id="安装duti"><a class="header-anchor" href="#安装duti">¶</a>安装<code>duti</code></h3><p>通过<code>homebrew</code>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew update</span><br><span class="line">brew install duti</span><br></pre></td></tr></table></figure><h3 id="生成配置文件"><a class="header-anchor" href="#生成配置文件">¶</a>生成配置文件</h3><p><code>duti</code>支持通过<code>.duti</code>或<code>plist</code>或命令的方式设置，用<code>.duti</code>配置文件比较直接，也便于保存。具体用法可以参照<code>man duti</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch .duti</span><br></pre></td></tr></table></figure><h3 id="填写配置文件"><a class="header-anchor" href="#填写配置文件">¶</a>填写配置文件</h3><p>在<code>.duti</code>中输入以下内容。分别表示设置<code>IINA</code>打开所有影片，使用<code>Sublime Text 3</code>打开所有纯文本文件（如<code>.txt</code>结尾的文件），使用<code>Sublime Text 3</code>打开所有扩展名为<code>yml</code>的文件。</p><p>值得注意的是，<code>duti</code>支持扩展名也支持所谓的<code>UTI</code>（Uniform Type Identifiers），是开发者用来分类数据的。<code>macOS</code>支持的<code>UTL</code>类型可以参照<a href="https://developer.apple.com/library/content/documentation/Miscellaneous/Reference/UTIRef/Articles/System-DeclaredUniformTypeIdentifiers.html" target="_blank" rel="noopener">这儿</a>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">com.colliderli.iina    public.movie       all</span><br><span class="line">com.sublimetext.3      public.plain-text  all</span><br><span class="line">com.sublimetext.3      yml                all</span><br></pre></td></tr></table></figure><div class="note info"><p>如果不清楚某个文件的类型，可以通过<code>mdls &lt;file&gt;</code>查看。 如果不清楚某个应用的包名，可以通过<code>osascript -e 'id of app &quot;AppName&quot;</code>查看。</p></div><h3 id="载入配置文件"><a class="header-anchor" href="#载入配置文件">¶</a>载入配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">duti .duti</span><br></pre></td></tr></table></figure><p>All set！试试看效果吧～</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;macOS&lt;/code&gt;下管理文件的默认打开程序不是很方便，不过有了&lt;code&gt;duti&lt;/code&gt;	就可以通过配置文件来更改默认打开程序了。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Material Design 配色的鼠须管 RIME 主题</title>
    <link href="https://yzlnew.github.io/2016/09/26/rime-theme/"/>
    <id>https://yzlnew.github.io/2016/09/26/rime-theme/</id>
    <published>2016-09-26T18:35:59.000Z</published>
    <updated>2018-11-20T03:20:46.818Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://o9gmysn8m.bkt.clouddn.com/2016-09-26-Rime.jpg" alt="Rime"></p><p>因为搜狗输入法在更新了 macOS 之后切换有点卡，再加上之前的皮肤不知道怎么的就被搜狗更新覆盖了。所以就找出鼠须管用吧。偶然发现皮肤还是挺好配的。</p><a id="more"></a><h3 id="说明"><a class="header-anchor" href="#说明">¶</a>说明</h3><ul><li>配置文件里还有两个我觉得比较好看的主题。一个是<code>Liang Hai</code>的<a href="https://zhuanlan.zhihu.com/p/19599206" target="_blank" rel="noopener"><code>Apathy</code></a>，另一个是<code>hotoo</code>的<a href="https://github.com/hotoo/rime" target="_blank" rel="noopener"><code>Pithy</code></a>。不难发现我就是照着后者改的，😄。</li><li>想要自定义颜色，直接上<a href="https://material.google.com/style/color.html" target="_blank" rel="noopener">MD官网</a>上找吧。值得注意的是，这里的颜色都是BGR排列的（不知道为什么）。</li></ul><h3 id="更改suqirrel-custom-yaml如下"><a class="header-anchor" href="#更改suqirrel-custom-yaml如下">¶</a>更改<code>suqirrel.custom.yaml</code>如下</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">patch:</span></span><br><span class="line"><span class="attr">  show_notifications_when:</span> <span class="string">never</span></span><br><span class="line">  </span><br><span class="line"><span class="attr">  style:</span></span><br><span class="line"><span class="attr">    color_scheme:</span> <span class="string">material</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  preset_color_schemes:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">    apathy:</span></span><br><span class="line">   </span><br><span class="line"><span class="attr">      name:</span> <span class="string">"冷漠 / Apathy"</span></span><br><span class="line"><span class="attr">      author:</span> <span class="string">"LIANG Hai"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">      horizontal:</span> <span class="literal">true</span>  <span class="comment"># 水平排列</span></span><br><span class="line"><span class="attr">      inline_preedit:</span> <span class="literal">true</span> <span class="comment">#单行显示，false双行显示</span></span><br><span class="line"><span class="attr">      candidate_format:</span> <span class="string">"%c\u2005%@\u2005"</span>  <span class="comment"># 用 1/6 em 空格 U+2005 来控制编号 %c 和候选词 %@ 前后的空间。</span></span><br><span class="line"></span><br><span class="line"><span class="attr">      corner_radius:</span> <span class="number">2</span>  <span class="comment">#候选条圆角</span></span><br><span class="line"><span class="attr">      border_height:</span> <span class="number">0</span> </span><br><span class="line"><span class="attr">      border_width:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">      back_color:</span> <span class="number">0xFFFFFF</span>  <span class="comment">#候选条背景色</span></span><br><span class="line"><span class="attr">      font_face:</span> <span class="string">"PingFang SC,H-SiuNiu"</span>  <span class="comment">#候选词字体</span></span><br><span class="line"><span class="attr">      font_point:</span> <span class="number">16</span>  <span class="comment">#候选字词大小</span></span><br><span class="line"><span class="attr">      text_color:</span> <span class="number">0x424242</span>  <span class="comment">#高亮选中词颜色</span></span><br><span class="line"><span class="attr">      label_font_face:</span> <span class="string">"PingFang SC Light"</span>   <span class="comment">#候选词编号字体</span></span><br><span class="line"><span class="attr">      label_font_point:</span> <span class="number">12</span>   <span class="comment">#候选编号大小</span></span><br><span class="line"><span class="attr">      hilited_candidate_text_color:</span> <span class="number">0xEE6E00</span>  <span class="comment">#候选文字颜色</span></span><br><span class="line"><span class="attr">      hilited_candidate_back_color:</span> <span class="number">0xFFFFFF</span>  <span class="comment">#候选文字背景色</span></span><br><span class="line"><span class="attr">      hilited_candidate_back_color:</span> <span class="number">0xFFF0E4</span>  <span class="comment">#候选文字背景色</span></span><br><span class="line"><span class="attr">      comment_text_color:</span> <span class="number">0x999999</span>  <span class="comment">#拼音等提示文字颜色</span></span><br><span class="line"></span><br><span class="line"><span class="attr">    pithy:</span></span><br><span class="line"><span class="attr">      name:</span> <span class="string">"简洁 / Pithy"</span></span><br><span class="line"><span class="attr">      author:</span> <span class="string">"@hotoo"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">      horizontal:</span> <span class="literal">false</span>                                 <span class="comment"># 水平排列</span></span><br><span class="line"><span class="attr">      inline_preedit:</span> <span class="literal">true</span>                              <span class="comment"># true: 单行显示，false: 双行显示</span></span><br><span class="line"><span class="attr">      candidate_format:</span> <span class="string">"\u2005%c\u2005%@\u2005"</span>        <span class="comment"># 用 1/6 em 空格 U+2005 来控制编号 %c 和候选词 %@ 前后的空间。</span></span><br><span class="line"></span><br><span class="line"><span class="attr">      corner_radius:</span> <span class="number">0</span>                                  <span class="comment"># 候选条圆角</span></span><br><span class="line"><span class="attr">      border_height:</span> <span class="number">2</span>                                  <span class="comment"># 窗口边界高度，大于圆角半径才生效</span></span><br><span class="line"><span class="attr">      border_width:</span> <span class="number">2</span>                                   <span class="comment"># 窗口边界宽度，大于圆角半径才生效</span></span><br><span class="line"><span class="attr">      back_color:</span> <span class="number">0xFFFFFF</span>                              <span class="comment"># 候选条背景色</span></span><br><span class="line"><span class="attr">      border_color:</span> <span class="number">0xE0B693</span>                            <span class="comment"># 边框色</span></span><br><span class="line"><span class="attr">      font_face:</span> <span class="string">"PingFangSC-Regular, H-SiuNiu"</span>         <span class="comment"># 候选词字体</span></span><br><span class="line"><span class="attr">      font_point:</span> <span class="number">19</span>                                    <span class="comment"># 候选字词大小</span></span><br><span class="line"><span class="attr">      text_color:</span> <span class="number">0x424242</span>                              <span class="comment"># 高亮选中词颜色</span></span><br><span class="line"><span class="attr">      label_font_face:</span> <span class="string">"SimHei"</span>                         <span class="comment"># 候选词编号字体</span></span><br><span class="line"><span class="attr">      label_font_point:</span> <span class="number">18</span>                              <span class="comment"># 候选编号大小</span></span><br><span class="line"><span class="attr">      label_color:</span> <span class="number">0x9e9e9e</span>                             <span class="comment"># 预选栏编号颜色</span></span><br><span class="line"><span class="attr">      candidate_text_color:</span> <span class="number">0x000000</span>                    <span class="comment"># 预选项文字颜色</span></span><br><span class="line"><span class="attr">      text_color:</span> <span class="number">0x9e9e9e</span>                              <span class="comment"># 拼音行文字颜色，24位色值，16进制，BGR顺序</span></span><br><span class="line"><span class="attr">      comment_text_color:</span> <span class="number">0x999999</span>                      <span class="comment"># 拼音等提示文字颜色</span></span><br><span class="line"><span class="attr">      hilited_text_color:</span> <span class="number">0x9e9e9e</span>                      <span class="comment"># 高亮拼音 (需要开启内嵌编码)</span></span><br><span class="line"><span class="attr">      hilited_candidate_text_color:</span> <span class="number">0x000000</span>            <span class="comment"># 第一候选项文字颜色</span></span><br><span class="line"><span class="attr">      hilited_candidate_back_color:</span> <span class="number">0xfff0e4</span>            <span class="comment"># 第一候选项背景背景色</span></span><br><span class="line"><span class="attr">      hilited_candidate_label_color:</span> <span class="number">0x9e9e9e</span>           <span class="comment"># 第一候选项编号颜色</span></span><br><span class="line"><span class="attr">      hilited_comment_text_color:</span> <span class="number">0x9e9e9e</span>              <span class="comment"># 注解文字高亮</span></span><br><span class="line"></span><br><span class="line"><span class="attr">    material:</span></span><br><span class="line"><span class="attr">      name:</span> <span class="string">"材料 / Material"</span></span><br><span class="line"><span class="attr">      author:</span> <span class="string">"@yzlnew"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">      horizontal:</span> <span class="literal">true</span>                                  <span class="comment"># 水平排列</span></span><br><span class="line"><span class="attr">      inline_preedit:</span> <span class="literal">true</span>                              <span class="comment"># true: 单行显示，false: 双行显示</span></span><br><span class="line"><span class="attr">      candidate_format:</span> <span class="string">"\u2005%c\u2005%@\u2005"</span>        <span class="comment"># 用 1/6 em 空格 U+2005 来控制编号 %c 和候选词 %@ 前后的空间。</span></span><br><span class="line"><span class="attr">      corner_radius:</span> <span class="number">2</span>                                  <span class="comment"># 候选条圆角</span></span><br><span class="line"><span class="attr">      border_height:</span> <span class="number">3</span>                                  <span class="comment"># 窗口边界高度，大于圆角半径才生效</span></span><br><span class="line"><span class="attr">      border_width:</span> <span class="number">3</span>                                   <span class="comment"># 窗口边界宽度，大于圆角半径才生效</span></span><br><span class="line"><span class="attr">      back_color:</span> <span class="number">0xFFFFFF</span>                              <span class="comment"># 候选条背景色</span></span><br><span class="line"><span class="attr">      border_color:</span> <span class="number">0x212121</span>                            <span class="comment"># 边框色</span></span><br><span class="line"><span class="attr">      font_face:</span> <span class="string">"PingFangSC-Regular, H-SiuNiu"</span>         <span class="comment"># 候选词字体</span></span><br><span class="line"><span class="attr">      font_point:</span> <span class="number">16</span>                                    <span class="comment"># 候选字词大小</span></span><br><span class="line"><span class="attr">      text_color:</span> <span class="number">0x3643F4</span>                              <span class="comment"># 高亮选中词颜色</span></span><br><span class="line"><span class="attr">      label_font_face:</span> <span class="string">"mononoki"</span>                       <span class="comment"># 候选词编号字体</span></span><br><span class="line"><span class="attr">      label_font_point:</span> <span class="number">16</span>                              <span class="comment"># 候选编号大小</span></span><br><span class="line"><span class="attr">      label_color:</span> <span class="number">0xDCD8CF</span>                             <span class="comment"># 预选栏编号颜色</span></span><br><span class="line"><span class="attr">      candidate_text_color:</span> <span class="number">0x9e9e9e</span>                    <span class="comment"># 预选项文字颜色</span></span><br><span class="line"><span class="attr">      text_color:</span> <span class="number">0x9e9e9e</span>                              <span class="comment"># 拼音行文字颜色，24位色值，16进制，BGR顺序</span></span><br><span class="line"><span class="attr">      comment_text_color:</span> <span class="number">0x9A9AEF</span>                      <span class="comment"># 拼音等提示文字颜色</span></span><br><span class="line"><span class="attr">      hilited_text_color:</span> <span class="number">0x9e9e9e</span>                      <span class="comment"># 高亮拼音 (需要开启内嵌编码)</span></span><br><span class="line"><span class="attr">      hilited_candidate_text_color:</span> <span class="number">0x212121</span>            <span class="comment"># 第一候选项文字颜色</span></span><br><span class="line"><span class="attr">      hilited_candidate_back_color:</span> <span class="number">0xDCD8CF</span>            <span class="comment"># 第一候选项背景背景色</span></span><br><span class="line"><span class="attr">      hilited_candidate_label_color:</span> <span class="number">0x212121</span>           <span class="comment"># 第一候选项编号颜色</span></span><br><span class="line"><span class="attr">      hilited_comment_text_color:</span> <span class="number">0x9A9AEF</span>              <span class="comment"># 注解文字高亮</span></span><br></pre></td></tr></table></figure><h3 id="更新"><a class="header-anchor" href="#更新">¶</a>更新</h3><p><s>一点都不好用</s>，还是自带好用。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://o9gmysn8m.bkt.clouddn.com/2016-09-26-Rime.jpg&quot; alt=&quot;Rime&quot;&gt;&lt;/p&gt;
&lt;p&gt;因为搜狗输入法在更新了 macOS 之后切换有点卡，再加上之前的皮肤不知道怎么的就被搜狗更新覆盖了。所以就找出鼠须管用吧。偶然发现皮肤还是挺好配的。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>利用 TikZ 宏包在 LaTeX 中绘制流程图</title>
    <link href="https://yzlnew.github.io/2016/06/22/flowchart/"/>
    <id>https://yzlnew.github.io/2016/06/22/flowchart/</id>
    <published>2016-06-22T09:37:35.000Z</published>
    <updated>2018-11-20T03:20:46.818Z</updated>
    
    <content type="html"><![CDATA[<p>本来打算把在毕设过程中零零碎碎学到或者用到的东西记录下来，没想到还是太懒，到最后就忘记要写什么了。由于在毕设论文中用到了流程图，就在网上找了找用 LaTeX 画流程图的方法，这里简单分享下。</p><a id="more"></a><h3 id="来源"><a class="header-anchor" href="#来源">¶</a>来源</h3><p><a href="http://www.texample.net/" target="_blank" rel="noopener">TeXample</a> 上给出了两种流程图的画法：</p><ul><li><a href="http://www.texample.net/tikz/examples/flexible-flow-chart/" target="_blank" rel="noopener">Easy-maintenance flowchart</a></li><li><a href="http://www.texample.net/tikz/examples/simple-flow-chart/" target="_blank" rel="noopener">Simple flow chart</a></li></ul><p>第一种比较好看，也比较容易维护，当然是用它了。</p><h3 id="所需宏包"><a class="header-anchor" href="#所需宏包">¶</a>所需宏包</h3><p>在导言区加入以下代码：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">\<span class="name">usepackage</span><span class="string">&#123;tikz&#125;</span></span></span><br><span class="line"><span class="tag">\<span class="name">usetikzlibrary</span><span class="string">&#123;shapes,arrows,chains&#125;</span></span></span><br><span class="line"><span class="tag">\<span class="name">usepackage</span><span class="string">&#123;xcolor&#125;</span></span></span><br></pre></td></tr></table></figure><h3 id="最终效果和代码"><a class="header-anchor" href="#最终效果和代码">¶</a>最终效果和代码</h3><p><img src="http://o9gmysn8m.bkt.clouddn.com/2016-07-06-flowchart.jpg" alt="flowchart"></p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 设置颜色代号</span></span><br><span class="line"><span class="tag">\<span class="name">colorlet</span><span class="string">&#123;lcfree&#125;</span><span class="string">&#123;green&#125;</span></span></span><br><span class="line"><span class="tag">\<span class="name">colorlet</span><span class="string">&#123;lcnorm&#125;</span><span class="string">&#123;blue&#125;</span></span></span><br><span class="line"><span class="tag">\<span class="name">colorlet</span><span class="string">&#123;lccong&#125;</span><span class="string">&#123;red&#125;</span></span></span><br><span class="line"><span class="comment">% -------------------------------------------------</span></span><br><span class="line"><span class="comment">% 设置调试标志层</span></span><br><span class="line"><span class="tag">\<span class="name">pgfdeclarelayer</span><span class="string">&#123;marx&#125;</span></span></span><br><span class="line"><span class="tag">\<span class="name">pgfsetlayers</span><span class="string">&#123;main,marx&#125;</span></span></span><br><span class="line"><span class="comment">% 标记坐标点的宏定义。交换下面两个定义关闭。</span></span><br><span class="line"><span class="tag">\<span class="name">providecommand</span><span class="string">&#123;\cmark&#125;</span><span class="string">[2]</span><span class="string">[]</span><span class="string">&#123;%</span></span></span><br><span class="line"><span class="tag"><span class="string">  \begin&#123;pgfonlayer&#125;</span><span class="string">&#123;marx&#125;</span></span></span><br><span class="line">    <span class="tag">\<span class="name">node</span></span> [nmark] at (c#2#1) &#123;#2&#125;;</span><br><span class="line">  <span class="tag">\<span class="name">end</span><span class="string">&#123;pgfonlayer&#125;</span><span class="string">&#123;marx&#125;</span></span></span><br><span class="line">  &#125; </span><br><span class="line"><span class="tag">\<span class="name">providecommand</span><span class="string">&#123;\cmark&#125;</span><span class="string">[2]</span><span class="string">[]</span><span class="string">&#123;\relax&#125;</span></span> </span><br><span class="line"><span class="comment">% -------------------------------------------------</span></span><br><span class="line"><span class="comment">% 开始绘图</span></span><br><span class="line"><span class="tag">\<span class="name">begin</span><span class="string">&#123;figure&#125;</span><span class="string">[H]</span></span></span><br><span class="line"><span class="tag">\<span class="name">centering</span></span></span><br><span class="line"><span class="tag">\<span class="name">scalebox</span><span class="string">&#123;.8&#125;</span><span class="string">&#123;%设置缩放</span></span></span><br><span class="line"><span class="tag"><span class="string">\begin&#123;tikzpicture&#125;</span><span class="string">[</span></span></span><br><span class="line"><span class="tag"><span class="string">    &gt;=triangle 60,              % 箭头的形状</span></span></span><br><span class="line"><span class="tag"><span class="string">    start chain=going below,    % 从上往下的流程</span></span></span><br><span class="line"><span class="tag"><span class="string">    node distance=6mm and 60mm, % 全局间距设置</span></span></span><br><span class="line"><span class="tag"><span class="string">    every join/.style=&#123;norm&#125;,   % 连接线的默认设置</span></span></span><br><span class="line"><span class="tag"><span class="string">    ]</span></span></span><br><span class="line"><span class="comment">% ------------------------------------------------- </span></span><br><span class="line"><span class="comment">% 节点的样式定义 </span></span><br><span class="line"><span class="comment">% &lt;on chain&gt; 和 &lt;on grid&gt; 可以减少手动调整节点位置的麻烦</span></span><br><span class="line"><span class="tag">\<span class="name">tikzset</span><span class="string">&#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">  base/.style=&#123;draw, on chain, on grid, align=center, minimum height=4ex&#125;</span></span>,</span><br><span class="line">  proc/.style=&#123;base, rectangle, text width=8em&#125;,</span><br><span class="line">  test/.style=&#123;base, diamond, aspect=2, text width=5em&#125;,</span><br><span class="line">  term/.style=&#123;proc, rounded corners&#125;,</span><br><span class="line">  <span class="comment">% coord 用来表示连接线的转折点</span></span><br><span class="line">  coord/.style=&#123;coordinate, on chain, on grid, node distance=6mm and 25mm&#125;,</span><br><span class="line">  <span class="comment">% nmark 用来表示调试标志</span></span><br><span class="line">  nmark/.style=&#123;draw, cyan, circle, font=&#123;<span class="tag">\<span class="name">sffamily</span></span><span class="tag">\<span class="name">bfseries</span></span>&#125;&#125;,</span><br><span class="line">  <span class="comment">% -------------------------------------------------</span></span><br><span class="line">  <span class="comment">% 不同的连接线样式</span></span><br><span class="line">  norm/.style=&#123;-&gt;, draw, lcnorm&#125;,</span><br><span class="line">  free/.style=&#123;-&gt;, draw, lcfree&#125;,</span><br><span class="line">  cong/.style=&#123;-&gt;, draw, lccong&#125;,</span><br><span class="line">  it/.style=&#123;font=&#123;<span class="tag">\<span class="name">small</span></span><span class="tag">\<span class="name">itshape</span></span>&#125;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">% -------------------------------------------------</span></span><br><span class="line"><span class="comment">% 先放节点</span></span><br><span class="line"><span class="tag">\<span class="name">node</span></span> [term, densely dotted,fill=lccong!25, it] (p0) &#123;输入&#125;;</span><br><span class="line"><span class="comment">% 用 join 表示和上一个节点相连 </span></span><br><span class="line"><span class="tag">\<span class="name">node</span></span> [proc, join]&#123;使用非线性最小二乘法得到 <span class="formula">$X_0$</span>&#125;;</span><br><span class="line"><span class="tag">\<span class="name">node</span></span> [proc, join]&#123;记录 <span class="formula">$X=X_0, f=f(X_0)$</span>&#125;;</span><br><span class="line"><span class="tag">\<span class="name">node</span></span> [test, join] (t1)&#123;<span class="formula">$T&gt;T_E$</span>?&#125;;</span><br><span class="line"><span class="tag">\<span class="name">node</span></span> [proc] (p1)&#123;<span class="formula">$step=0$</span>&#125;;</span><br><span class="line"><span class="tag">\<span class="name">node</span></span> [test, join] (t2)&#123;<span class="formula">$step&lt;count$</span>?&#125;;</span><br><span class="line"><span class="tag">\<span class="name">node</span></span> [proc] (p2)&#123;得到新状态<span class="formula">$P_N=P+scale<span class="tag">\<span class="name">times</span></span> rand$</span>,计算目标函数差<span class="formula">$<span class="tag">\<span class="name">Delta</span></span> f$</span>&#125;;</span><br><span class="line"><span class="tag">\<span class="name">node</span></span> [test, join] (t3)&#123;<span class="formula">$F_&#123;Accept&#125;&lt;rand$</span>?&#125;;</span><br><span class="line"><span class="tag">\<span class="name">node</span></span> [proc] (p3)&#123;记录新状态 <span class="formula">$X=X_N,f=f(X_N)$</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">node</span></span> [proc, left=of t1] (p4)&#123;<span class="formula">$T=T<span class="tag">\<span class="name">times</span></span> a,scale=scale<span class="tag">\<span class="name">times</span></span> b$</span>&#125;;</span><br><span class="line"><span class="tag">\<span class="name">node</span></span> [term, densely dotted, right=of t1,fill=lcfree!25](p5)&#123;输出&#125;;</span><br><span class="line"><span class="tag">\<span class="name">node</span></span> [proc, right=of t3](p6)&#123;<span class="formula">$step++$</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">node</span></span> [coord, left=of t2] (c1)  &#123;&#125;; </span><br><span class="line"><span class="tag">\<span class="name">node</span></span> [coord, right=of t2] (c2)  &#123;&#125;; </span><br><span class="line"><span class="tag">\<span class="name">node</span></span> [coord, right=of p3] (c3)  &#123;&#125;; </span><br><span class="line"><span class="comment">%先画南北方向的连接线，先画线再画两端的标志和箭头</span></span><br><span class="line"><span class="tag">\<span class="name">path</span></span> (t1.south) to node [near start, xshift=1em] &#123;<span class="formula">$y$</span>&#125; (p1);</span><br><span class="line">  <span class="tag">\<span class="name">draw</span></span> [*-&gt;,lcnorm] (t1.south) -- (p1);</span><br><span class="line"><span class="tag">\<span class="name">path</span></span> (t2.south) to node [near start, xshift=1em] &#123;<span class="formula">$y$</span>&#125; (p2);</span><br><span class="line">  <span class="tag">\<span class="name">draw</span></span> [*-&gt;,lcnorm] (t2.south) -- (p2);</span><br><span class="line"><span class="tag">\<span class="name">path</span></span> (t3.south) to node [near start, xshift=1em] &#123;<span class="formula">$y$</span>&#125; (p3);</span><br><span class="line">  <span class="tag">\<span class="name">draw</span></span> [*-&gt;,lcnorm] (t3.south) -- (p3);</span><br><span class="line"><span class="comment">%接着画东西方向的连接线，方法同上</span></span><br><span class="line"><span class="tag">\<span class="name">path</span></span> (t1.east) to node [near start, yshift=1em]  &#123;<span class="formula">$n$</span>&#125;(p5);</span><br><span class="line">  <span class="tag">\<span class="name">draw</span></span> [o-&gt;,lcnorm] (t1.east) -- (p5);</span><br><span class="line">  <span class="tag">\<span class="name">draw</span></span> [-&gt;,lcnorm] (p4.east) -- (t1);</span><br><span class="line"><span class="tag">\<span class="name">path</span></span> (t3.east) to node [near start, yshift=1em]  &#123;<span class="formula">$n$</span>&#125;(p6);</span><br><span class="line">  <span class="tag">\<span class="name">draw</span></span> [o-&gt;,lcnorm] (t3.east) -- (p6);</span><br><span class="line"><span class="tag">\<span class="name">path</span></span> (t2.west) to node [near start, yshift=1em]  &#123;<span class="formula">$n$</span>&#125;(c1);</span><br><span class="line">  <span class="tag">\<span class="name">draw</span></span> [o-&gt;,lcnorm] (t2.west) -- (c1) -| (p4);</span><br><span class="line">  <span class="tag">\<span class="name">draw</span></span> [-&gt;,lcnorm] (p3.east) -- (c3) -| (p6.south);</span><br><span class="line">  <span class="tag">\<span class="name">draw</span></span> [&lt;-,lcnorm] (t2.east) -- (c2) -| (p6.north);</span><br><span class="line">  <span class="tag">\<span class="name">end</span><span class="string">&#123;tikzpicture&#125;</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">\<span class="name">label</span><span class="string">&#123;fig:algorithm&#125;</span></span></span><br><span class="line"><span class="tag">\<span class="name">end</span><span class="string">&#123;figure&#125;</span></span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本来打算把在毕设过程中零零碎碎学到或者用到的东西记录下来，没想到还是太懒，到最后就忘记要写什么了。由于在毕设论文中用到了流程图，就在网上找了找用 LaTeX 画流程图的方法，这里简单分享下。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
