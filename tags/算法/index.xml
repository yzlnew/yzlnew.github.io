<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>算法 on 黄石的时空回环</title><link>https://yzlnew.com/tags/%E7%AE%97%E6%B3%95/</link><description>Recent content in 算法 on 黄石的时空回环</description><generator>Hugo</generator><language>zh-cn</language><copyright>© Copyright Ye Zhiling</copyright><lastBuildDate>Tue, 23 Mar 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://yzlnew.com/tags/%E7%AE%97%E6%B3%95/index.xml" rel="self" type="application/rss+xml"/><item><title>频繁模式挖掘</title><link>https://yzlnew.com/2021/03/frequent-itemset-mining/</link><pubDate>Tue, 23 Mar 2021 00:00:00 +0000</pubDate><guid>https://yzlnew.com/2021/03/frequent-itemset-mining/</guid><description>&lt;style type="text/css">.notice{padding:18px;line-height:24px;margin-bottom:24px;margin-top:24px;border-radius:4px;color:#444;background:#e7f2fa}.notice p:last-child{margin-bottom:0}.notice-title{margin:-18px -18px 12px;padding:4px 18px;border-radius:4px 4px 0 0;font-weight:700;color:#fff;background:#6ab0de}.notice.warning .notice-title{background:#efafa9}.notice.warning{background:#fcefee}.notice.info .notice-title{background:#ffe999;}.notice.info{background:#fffbeb}.notice.note .notice-title{background:#99d6ff}.notice.note{background:#ebf7ff}.notice.tip .notice-title{background:#ccd9bf}.notice.tip{background:#f5f7f2}.icon-notice{display:inline-flex;align-self:center;margin-right:8px}.icon-notice img,.icon-notice svg{height:1em;width:1em;fill:currentColor}.icon-notice img,.icon-notice.baseline svg{top:0.125em;position:relative}&lt;/style>
&lt;svg width="0" height="0" display="none" xmlns="http://www.w3.org/2000/svg">&lt;symbol id="tip-notice" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="3" stroke-linecap="round" stroke-linejoin="round" class="feather feather-check-circle">&lt;path d="M22 11.08V12a10 10 0 1 1-5.93-9.14">&lt;/path>&lt;polyline points="22 4 12 14.01 9 11.01">&lt;/polyline>&lt;/symbol>&lt;symbol id="note-notice" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="3" stroke-linecap="round" stroke-linejoin="round" class="feather feather-alert-circle">&lt;circle cx="12" cy="12" r="10">&lt;/circle>&lt;line x1="12" y1="8" x2="12" y2="12">&lt;/line>&lt;line x1="12" y1="16" x2="12.01" y2="16">&lt;/line>&lt;/symbol>&lt;symbol id="warning-notice" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="3" stroke-linecap="round" stroke-linejoin="round" class="feather feather-alert-triangle">&lt;path d="M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z">&lt;/path>&lt;line x1="12" y1="9" x2="12" y2="13">&lt;/line>&lt;line x1="12" y1="17" x2="12.01" y2="17">&lt;/line>&lt;/symbol>&lt;symbol id="info-notice" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="3" stroke-linecap="round" stroke-linejoin="round" class="feather feather-info">&lt;circle cx="12" cy="12" r="10">&lt;/circle>&lt;line x1="12" y1="16" x2="12" y2="12">&lt;/line>&lt;line x1="12" y1="8" x2="12.01" y2="8">&lt;/line>&lt;/symbol>&lt;/svg>&lt;div class="notice info" >
&lt;p class="first notice-title">&lt;span class="icon-notice baseline">&lt;svg>&lt;use href="#info-notice">&lt;/use>&lt;/svg>&lt;/span>信息&lt;/p></description></item><item><title>从 heapq 到 TopK</title><link>https://yzlnew.com/2021/03/heapq-topk/</link><pubDate>Tue, 16 Mar 2021 00:00:00 +0000</pubDate><guid>https://yzlnew.com/2021/03/heapq-topk/</guid><description>&lt;p>最近在看 Python3 Cookbook，还挺有趣的。&lt;/p>
&lt;h3 id="heapq-寻找最小最大元素">&lt;code>Heapq&lt;/code> 寻找最小/最大元素&lt;/h3>
&lt;p>其中 1.4 节提到了一个问题「查找最大或最小的 N 个元素」，用到了内置的 &lt;code>heapq&lt;/code> 模块的两个函数 &lt;code>nlargest()&lt;/code> 和 &lt;code>nsmallest()&lt;/code> 。本质上是利用了最小/最大堆，从堆顶得到堆里面最小/最大的元素。&lt;/p></description></item></channel></rss>